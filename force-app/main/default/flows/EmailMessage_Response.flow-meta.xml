<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Bell</name>
        <label>Bell</label>
        <locationX>842</locationX>
        <locationY>971</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>BellNotification</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>Inbound Email Message posted on Case({!getCase.CaseNumber})</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Your Support Escalated Case has an update</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>RecipientList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>getCase.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Bell_Notification_to_RMA_Submitted_by</name>
        <label>Bell Notification to RMA Submitted by</label>
        <locationX>578</locationX>
        <locationY>971</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>BellNotification</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>Inbound Email Message posted on Case({!getCase.CaseNumber})</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Your RMA Submitted Case has an update</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>RecipientList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>getCase.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Case_Email_Alert_To_Support_Manager</name>
        <label>Case Email Alert To Support Manager</label>
        <locationX>314</locationX>
        <locationY>971</locationY>
        <actionName>Case.Email_Alert_to_Escalated_by_User_to_Support_Manager</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Email_Alert_to_Escalated_by_User_to_Support_Manager</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Case_Email_Escalated_By_user</name>
        <label>Case Email Escalated By user</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <actionName>Case.Email_Alert_to_Escalated_by_User</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>RecipientList_Assignment</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Email_Alert_to_Escalated_by_User</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Email_to_support_Escalated_By</name>
        <label>Email to support Escalated By</label>
        <locationX>842</locationX>
        <locationY>755</locationY>
        <actionName>Case.Email_Alert_to_Support_Escalated_by</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>SupportEscalatedBy</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Email_Alert_to_Support_Escalated_by</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_to_Escalated_By</name>
        <label>Notification to Escalated By</label>
        <locationX>50</locationX>
        <locationY>1187</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>BellNotification</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>Inbound Email Message posted on Case({!getCase.CaseNumber})</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Your Escalated Case has an update</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>RecipientList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>getCase.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_to_RMA_Submitted_by</name>
        <label>Send Email to RMA Submitted by</label>
        <locationX>578</locationX>
        <locationY>755</locationY>
        <actionName>Case.Inbound_Email_on_RMA_Case_Email_Alert</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>RecipientList1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Inbound_Email_on_RMA_Case_Email_Alert</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>RecipientList1</name>
        <label>RecipientList1</label>
        <locationX>578</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>RecipientList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>getCase.RMA_Submitted_By__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Bell_Notification_to_RMA_Submitted_by</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>RecipientList_Assignment</name>
        <label>RecipientList Assignment</label>
        <locationX>50</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>RecipientList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>getCase.Engineering_Escalated_By__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_to_Escalated_By</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SupportEscalatedBy</name>
        <label>SupportEscalatedBy</label>
        <locationX>842</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>RecipientList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>getCase.Escalated_to_support_escalations_by__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Bell</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Case_Rec_Check</name>
        <label>Case Rec Check</label>
        <locationX>1007</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Dev_XDR_or_TAC_or_Support_Escalated_Queue</name>
            <conditionLogic>1 AND 2 AND ((3 AND 4 ) OR 5 OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>getCase.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getCase.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getCase.Engineering_Escalated_By__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getCase.Engineering_Escalation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getCase.RMA_Submitted_By__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getCase.Escalated_to_support_escalations_by__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetQueue_Records</targetReference>
            </connector>
            <label>Dev/XDR or TAC or Support Escalated Queue?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Escalated_is_Active_or_Not</name>
        <label>Check Escalated is Active or Not</label>
        <locationX>182</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>Case_Email_Alert_To_Support_Manager</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Escalated_User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Email_Escalated_By_user</targetReference>
            </connector>
            <label>Active</label>
        </rules>
    </decisions>
    <decisions>
        <name>QueueCheck</name>
        <label>QueueCheck</label>
        <locationX>644</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Dev_or_XDR_Queue</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4) AND 5</conditionLogic>
            <conditions>
                <leftValueReference>GetQueue_Records.Name</leftValueReference>
                <operator>EndsWith</operator>
                <rightValue>
                    <stringValue>Dev</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetQueue_Records.Name</leftValueReference>
                <operator>EndsWith</operator>
                <rightValue>
                    <stringValue>DEV</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetQueue_Records.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Phishline</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetQueue_Records.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>XDR_Escalations</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Engineering_Escalated_By__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Escalated_User</targetReference>
            </connector>
            <label>Dev or XDR Queue?</label>
        </rules>
        <rules>
            <name>Tac_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetQueue_Records.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TAC Customer Services</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_to_RMA_Submitted_by</targetReference>
            </connector>
            <label>Tac Queue</label>
        </rules>
        <rules>
            <name>SupportEscalation</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetQueue_Records.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Backup_Support_Escalations</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetQueue_Records.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Archiver_Support_Escalations</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetQueue_Records.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CloudGen_Support_Escalations</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_to_support_Escalated_By</targetReference>
            </connector>
            <label>SupportEscalation</label>
        </rules>
    </decisions>
    <description>SFDC 15398 + Adding RMA logic  story # 14648 + SFDC-19037 + SFDC-19125</description>
    <environments>Default</environments>
    <formulas>
        <name>BellNotification</name>
        <dataType>String</dataType>
        <expression>{!$Label.Bell_Notification}</expression>
    </formulas>
    <formulas>
        <name>PSRecordType</name>
        <dataType>String</dataType>
        <expression>{!$Label.Professional_Services_Record_Type}</expression>
    </formulas>
    <formulas>
        <name>TSRecordType</name>
        <dataType>String</dataType>
        <expression>{!$Label.Technical_Support_Record_Type}</expression>
    </formulas>
    <formulas>
        <name>var_frml_DevQueue</name>
        <dataType>Boolean</dataType>
        <expression>OR(
      RIGHT({!getCase.Owner:Group.DeveloperName} ,3) =&quot;Dev&quot;,
      RIGHT({!getCase.Owner:Group.DeveloperName} ,3) =&quot;DEV&quot;,
      {!getCase.Owner:Group.DeveloperName} =&quot;Phishline&quot;)</expression>
    </formulas>
    <interviewLabel>EmailMessage_Response {!$Flow.CurrentDateTime}</interviewLabel>
    <label>EmailMessage_Response</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Escalated_User</name>
        <label>Get Escalated User</label>
        <locationX>182</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Escalated_is_Active_or_Not</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getCase.Engineering_Escalated_By__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getCase</name>
        <label>getCase</label>
        <locationX>1007</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Case_Rec_Check</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>PSRecordType</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>TSRecordType</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetQueue_Records</name>
        <label>GetQueue Records</label>
        <locationX>644</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>QueueCheck</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getCase.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>881</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getCase</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>ParentId</field>
            <operator>StartsWith</operator>
            <value>
                <stringValue>500</stringValue>
            </value>
        </filters>
        <filters>
            <field>Incoming</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>RecipientList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
