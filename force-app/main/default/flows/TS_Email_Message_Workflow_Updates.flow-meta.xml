<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <decisions>
        <description>If Flow Switch Support Active Run the Flow else end execution of Flow</description>
        <name>Is_Flow_Switch_Support_Active</name>
        <label>Is Flow Switch Support Active?</label>
        <locationX>776</locationX>
        <locationY>479</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Active_Flow_Switch_Support</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Flow_Switch_Support</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>When_Case_email_is_recieved</targetReference>
            </connector>
            <label>Active Flow Switch Support</label>
        </rules>
    </decisions>
    <decisions>
        <description>If case status is waiting for customer or Resolved and email is received mark it as In progress</description>
        <name>When_Case_email_is_recieved</name>
        <label>When Case email is recieved</label>
        <locationX>446</locationX>
        <locationY>587</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Email_Received</name>
            <conditionLogic>(1 OR 2 OR 3) AND 4 AND NOT(5) AND 6 AND 7</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Waiting for Customer Response</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Vendor Hold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resolved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Automatic Reply</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Technical Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>0</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Status</targetReference>
            </connector>
            <label>Case Email Received?</label>
        </rules>
        <rules>
            <name>Update_Agent_First_Communication</name>
            <conditionLogic>1 AND 2 AND 3 AND 4 AND 5 AND (6 OR 7) AND 8</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Agent_First_Communication__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>EmailSubject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Technical Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Professional Services</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Agent_First_Communication_Fields</targetReference>
            </connector>
            <label>Update - Agent First Communication</label>
        </rules>
        <rules>
            <name>Update_Agent_Last_Outbound_Email</name>
            <conditionLogic>1 AND 2 AND 3 AND 4 AND (5 OR 6) AND 7</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>EmailSubject</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Technical Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Professional Services</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Agent_Last_Outbound_Email_Field</targetReference>
            </connector>
            <label>Update Agent Last Outbound Email</label>
        </rules>
    </decisions>
    <description>Technical Support Record Type Email Message updates + SFDC-19606 + SFDC-20290</description>
    <environments>Default</environments>
    <formulas>
        <name>EmailSubject</name>
        <dataType>Boolean</dataType>
        <expression>IF(&apos;Your Case &apos; + {!$Record.Parent.CaseNumber} + &apos; has been received&apos; == LEFT({!$Record.Subject}, 36), true, false)</expression>
    </formulas>
    <interviewLabel>TS Email Message Workflow Updates {!$Flow.CurrentDateTime}</interviewLabel>
    <label>TS Email Message Workflow Updates</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get Custom Metadata Flow Switch Support</description>
        <name>Get_Flow_Switch_Support</name>
        <label>Get Flow Switch Support</label>
        <locationX>776</locationX>
        <locationY>371</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Flow_Switch_Support_Active</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Flow_Switch_Support__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Agent_First_Communication_Fields</name>
        <label>Update - Agent First Communication Fields</label>
        <locationX>314</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Agent_First_Communication_Method__c</field>
            <value>
                <stringValue>Email</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Agent_First_Communication__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_Email_Sent__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Agent_Last_Outbound_Email_Field</name>
        <label>Update Agent Last Outbound Email Field</label>
        <locationX>578</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Last_Email_Sent__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Status</name>
        <label>Update Case Status</label>
        <locationX>50</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>650</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>Get_Flow_Switch_Support</targetReference>
        </connector>
        <filterFormula>({!$Record.Incoming}=True &amp;&amp; (TEXT({!$Record.Status})=&apos;New&apos;) || ({!$Record.Incoming}= False &amp;&amp; TEXT({!$Record.Status})=&apos;Sent&apos;))</filterFormula>
        <object>EmailMessage</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
</Flow>
