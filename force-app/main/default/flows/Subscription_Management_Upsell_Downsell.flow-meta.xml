<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Fetches contract for the serial present in the Hot List</description>
        <name>Fetch_Contracts_For_Serial</name>
        <label>Fetch Contracts For Serial</label>
        <locationX>635</locationX>
        <locationY>746</locationY>
        <actionName>ContractIdentification</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Contract_Check</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>serialIdList</name>
            <value>
                <elementReference>Get_Current_Hot_List.Existing_Serial__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>ContractIdentification</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Land User onto Contract record page</description>
        <name>Open_Contract</name>
        <label>Open Contract</label>
        <locationX>649</locationX>
        <locationY>1474</locationY>
        <actionName>c:navigateToRecord</actionName>
        <actionType>component</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>Fetch_Contracts_For_Serial.contractId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>c:navigateToRecord</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Open_The_Contract</name>
        <label>Open The Contract</label>
        <locationX>1765</locationX>
        <locationY>1152</locationY>
        <actionName>c:navigateToRecord</actionName>
        <actionType>component</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>Get_Current_Hot_List.Existing_Contract__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>c:navigateToRecord</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>End_The_Flow</name>
        <label>End The Flow</label>
        <locationX>994</locationX>
        <locationY>741</locationY>
        <assignmentItems>
            <assignToReference>Text_End_Flow</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Exit_the_Process</name>
        <label>Exit the Process</label>
        <locationX>354</locationX>
        <locationY>1317</locationY>
        <assignmentItems>
            <assignToReference>Text_End_Flow</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Prepares the comma separated value of contract numbers</description>
        <name>Set_Contract_Numbers</name>
        <label>Set Contract Numbers</label>
        <locationX>505</locationX>
        <locationY>1034</locationY>
        <assignmentItems>
            <assignToReference>contract_Number_Text</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Contract_Number_Rows</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Mulitple_Contract_Loop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Single_Contract_Number</name>
        <label>Set Single Contract Number</label>
        <locationX>221</locationX>
        <locationY>1132</locationY>
        <assignmentItems>
            <assignToReference>Single_Contract_Number</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Single_Contract.ContractNumber</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Single_Contract</targetReference>
        </connector>
    </assignments>
    <choices>
        <description>If No is selected flow will end</description>
        <name>MSP_SONIAN_Radio_button_Choice_No</name>
        <choiceText>No, return to the Hot List to select the correct Contract Number</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>No, return to the Hot List to select the correct Contract Number</stringValue>
        </value>
    </choices>
    <choices>
        <description>If clicks Yes Upsell/Amend process will be continued</description>
        <name>MSP_SONIAN_Radio_button_Choice_Yes</name>
        <choiceText>Yes, this is the correct Contract Number</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Yes, this is the correct Contract Number</stringValue>
        </value>
    </choices>
    <choices>
        <description>If No is selected flow will end</description>
        <name>Radio_button_Choice_No</name>
        <choiceText>No, return to the Hot List to enter the correct Serial Number</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>No, return to the Hot List to enter the correct Serial Number</stringValue>
        </value>
    </choices>
    <choices>
        <description>If Clicks Yes Upsell process will be continued</description>
        <name>Radio_button_Choice_Yes</name>
        <choiceText>Yes, this is correct Serial Number</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Yes, this is correct Serial Number</stringValue>
        </value>
    </choices>
    <choices>
        <name>Radiobutton_Choice_No_dont_Proceed_with_Upsell</name>
        <choiceText>No</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>No</stringValue>
        </value>
    </choices>
    <choices>
        <name>Radiobutton_Choice_Yes_Proceed_With_Upsell</name>
        <choiceText>Yes</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Yes</stringValue>
        </value>
    </choices>
    <decisions>
        <name>Check_Business_Group</name>
        <label>Check Business Group</label>
        <locationX>1213</locationX>
        <locationY>464</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Core</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Business_Group__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Core</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_If_Serial_Exists</targetReference>
            </connector>
            <label>Core</label>
        </rules>
        <rules>
            <name>MSP_OR_SONIAN</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Business_Group__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MSP</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Business_Group__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Sonian</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_if_Contract_Exists</targetReference>
            </connector>
            <label>MSP OR SONIAN</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Contract_Exists</name>
        <label>Check if Contract Exists</label>
        <locationX>1491</locationX>
        <locationY>466</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Contract_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Contract__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Contract__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Verify_Contract_Is_Correct</targetReference>
            </connector>
            <label>Yes Contract Exists</label>
        </rules>
        <rules>
            <name>No_Contract_Doesn_t_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Contract__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Contract__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Existing_Contract_Empty_Error_Screen</targetReference>
            </connector>
            <label>No Contract Doesn&apos;t Exist</label>
        </rules>
        <rules>
            <name>Verify_Contract_Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Contract__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Contract__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Contract__r.AccountId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Current_Hot_List.Account__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Existing_Contract_Account_Verification</targetReference>
            </connector>
            <label>Verify Contract Account</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_If_it_is_the_Hot_List_Lead</name>
        <label>Check If it is the Hot List Lead</label>
        <locationX>1706</locationX>
        <locationY>741</locationY>
        <defaultConnector>
            <targetReference>Update_The_Contract</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>HotList CONTACT</defaultConnectorLabel>
        <rules>
            <name>Hot_List_LEAD</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Lead__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Lead__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hot_List_Lead</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Mark_This_Hot_List_As_Primary</targetReference>
            </connector>
            <label>Hot List LEAD</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check If Existing Serial Exists on HotList</description>
        <name>Check_If_Serial_Exists</name>
        <label>Check If Serial Exists</label>
        <locationX>998</locationX>
        <locationY>463</locationY>
        <defaultConnector>
            <targetReference>Existing_Serial_Is_Null</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Serial_Is_Empty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Serial__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Serial__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Existing_Serial_Is_Null</targetReference>
            </connector>
            <label>Serial Is Empty</label>
        </rules>
        <rules>
            <name>Serial_Account_Not_equals_to_Hotlist_Account</name>
            <conditionLogic>1 AND 3 AND 2</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Serial__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Account__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Current_Hot_List.Existing_Serial__r.Account__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Serial__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SerialAccountVerification</targetReference>
            </connector>
            <label>Serial Account&lt;&gt;Hotlist Account</label>
        </rules>
        <rules>
            <name>Yes_Serial_Present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Serial__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Existing_Serial__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Account__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Get_Current_Hot_List.Existing_Serial__r.Account__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Verify_Serial_Is_Correct</targetReference>
            </connector>
            <label>Serial Present</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_If_the_Hot_List_Lead</name>
        <label>Check If the Hot List Lead</label>
        <locationX>648</locationX>
        <locationY>1148</locationY>
        <defaultConnector>
            <targetReference>Update_Contract</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Hot List Contact</defaultConnectorLabel>
        <rules>
            <name>If_HotList_Lead</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Lead__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Lead__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hot_List_Lead</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Mark_Hot_List_As_Primary</targetReference>
            </connector>
            <label>If HotList Lead</label>
        </rules>
    </decisions>
    <decisions>
        <name>Contract_Check</name>
        <label>Contract Check</label>
        <locationX>447</locationX>
        <locationY>756</locationY>
        <defaultConnector>
            <targetReference>Mulitple_Contract_Loop</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Contract Fetch Failed</defaultConnectorLabel>
        <rules>
            <name>Contract_Fetch_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Fetch_Contracts_For_Serial.result</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Single_Contract</targetReference>
            </connector>
            <label>Contract Fetch Success</label>
        </rules>
    </decisions>
    <decisions>
        <name>Owner_Is_Queue</name>
        <label>Owner Is Queue</label>
        <locationX>1210</locationX>
        <locationY>302</locationY>
        <defaultConnector>
            <targetReference>Check_Business_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not a Queue</defaultConnectorLabel>
        <rules>
            <name>Yes_Queue</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Lead__r.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Owner_Is_Queue_Error_Screen</targetReference>
            </connector>
            <label>Yes- Queue</label>
        </rules>
        <rules>
            <name>Owner_is_Marketo_Sync</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Owner:User.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>005f200000A12WvAAJ</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Marketosync_is_the_owner_Error_Message</targetReference>
            </connector>
            <label>Owner is Marketo Sync</label>
        </rules>
        <rules>
            <name>NOT_SAL</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Hot_List.Disposition__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Sales Accepted Lead</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NOT_SAL_Message</targetReference>
            </connector>
            <label>NOT SAL</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if Yes or No selected. Based on this flow next steps will be defined</description>
        <name>Proceed_With_an_Upsell</name>
        <label>Proceed With an Upsell</label>
        <locationX>434</locationX>
        <locationY>1143</locationY>
        <defaultConnector>
            <targetReference>Exit_the_Process</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Exit The Flow</defaultConnectorLabel>
        <rules>
            <name>Yes_Proceed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Radiobutton_Choice_Yes_Proceed_With_Upsell</leftValueReference>
                <operator>WasSelected</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_If_the_Hot_List_Lead</targetReference>
            </connector>
            <label>Yes-Proceed</label>
        </rules>
    </decisions>
    <decisions>
        <name>User_Confirmation</name>
        <label>User Confirmation</label>
        <locationX>836</locationX>
        <locationY>743</locationY>
        <defaultConnector>
            <targetReference>End_The_Flow</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Exit Flow</defaultConnectorLabel>
        <rules>
            <name>Yes_Proceed_to_Next_screen</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Radio_button_Choice_Yes</leftValueReference>
                <operator>WasSelected</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Fetch_Contracts_For_Serial</targetReference>
            </connector>
            <label>Yes, Proceed to Next screen</label>
        </rules>
    </decisions>
    <decisions>
        <name>UserConfirmation</name>
        <label>User Confirmation</label>
        <locationX>1493</locationX>
        <locationY>747</locationY>
        <defaultConnector>
            <targetReference>End_The_Flow</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Exit the Flow</defaultConnectorLabel>
        <rules>
            <name>Yes_Proceed_with_Upsell_Amend</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>MSP_SONIAN_Radio_button_Choice_Yes</leftValueReference>
                <operator>WasSelected</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_If_it_is_the_Hot_List_Lead</targetReference>
            </connector>
            <label>Yes, Proceed with Upsell/Amend</label>
        </rules>
    </decisions>
    <description>Screen flow which guides users through the upsell/down-sell process</description>
    <environments>Default</environments>
    <interviewLabel>Subscription Management Upsell Downsell {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Subscription Management Upsell Downsell</label>
    <loops>
        <description>Loop through multiple contracts to prepare the list of contract numbers</description>
        <name>Mulitple_Contract_Loop</name>
        <label>Mulitple Contract Loop</label>
        <locationX>350</locationX>
        <locationY>921</locationY>
        <collectionReference>Fetch_Contracts_For_Serial.contractList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_Contract_Numbers</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Contract_Fetch_Error</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>This is to get a single contract from the contract list</description>
        <name>Single_Contract</name>
        <label>Single Contract</label>
        <locationX>247</locationX>
        <locationY>777</locationY>
        <collectionReference>Fetch_Contracts_For_Serial.contractList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Set_Single_Contract_Number</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Show_Contract_Information</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Contract_Numbers</name>
        <label>Get Contract Numbers</label>
        <locationX>535</locationX>
        <locationY>854</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Contract_Numbers</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Mulitple_Contract_Loop.Id</elementReference>
            </value>
        </filters>
        <object>Contract</object>
        <outputAssignments>
            <assignToReference>Contract_Numbers_from_Loop</assignToReference>
            <field>ContractNumber</field>
        </outputAssignments>
        <sortField>ContractNumber</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>Get_Current_Hot_List</name>
        <label>Get Current Hot List</label>
        <locationX>1217</locationX>
        <locationY>178</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Owner_Is_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Hot_List__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Mark_Hot_List_As_Primary</name>
        <label>Mark Hot List As Primary</label>
        <locationX>547</locationX>
        <locationY>1329</locationY>
        <connector>
            <targetReference>Update_Contract</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Current_Hot_List.Lead__r.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Primary_Hot_List__c</field>
            <value>
                <elementReference>Get_Current_Hot_List.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Lead</object>
    </recordUpdates>
    <recordUpdates>
        <name>Mark_This_Hot_List_As_Primary</name>
        <label>Mark This Hot List As Primary</label>
        <locationX>1580</locationX>
        <locationY>984</locationY>
        <connector>
            <targetReference>Update_The_Contract</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Current_Hot_List.Lead__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Primary_Hot_List__c</field>
            <value>
                <elementReference>Get_Current_Hot_List.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Lead</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Contract</name>
        <label>Update Contract</label>
        <locationX>757</locationX>
        <locationY>1324</locationY>
        <connector>
            <targetReference>Open_Contract</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Fetch_Contracts_For_Serial.contractId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Most_Recent_Upsell_Hot_List__c</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <object>Contract</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_The_Contract</name>
        <label>Update The Contract</label>
        <locationX>1828</locationX>
        <locationY>987</locationY>
        <connector>
            <targetReference>Open_The_Contract</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Current_Hot_List.Existing_Contract__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Most_Recent_Upsell_Hot_List__c</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <object>Contract</object>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>Contract_Fetch_Error</name>
        <label>Contract Fetch Error</label>
        <locationX>625</locationX>
        <locationY>985</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Contract_Fetch_Error_Message</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(166, 0, 0);&quot;&gt;{!Fetch_Contracts_For_Serial.message}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Contract Numbers:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;{!contract_Number_Text}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Existing_Contract_Account_Verification</name>
        <label>Existing Contract Account Verification</label>
        <locationX>1772</locationX>
        <locationY>537</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ExistingContractAccountVerification</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 16px; color: rgb(166, 0, 0);&quot;&gt;The Serial you have selected is associated with a different Account than the Account on the Hot List. Please select the correct serial.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Existing_Contract_Empty_Error_Screen</name>
        <label>Existing Contract Empty Error Screen</label>
        <locationX>1742</locationX>
        <locationY>423</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ExistingContractEmptyMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(166, 0, 0);&quot;&gt;Please enter a valid Existing Contract to proceed further.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>If the Existing Serial is empty on Hotlist this error message will appear.</description>
        <name>Existing_Serial_Is_Null</name>
        <label>Existing Serial Is Null</label>
        <locationX>443</locationX>
        <locationY>444</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Existing_Serial_Is_Empty_Error_Message</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px; color: rgb(166, 0, 0);&quot;&gt;Please enter a valid Saas Account serial Number on your Hot List and try again.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Marketosync_is_the_owner_Error_Message</name>
        <label>Marketosync is the owner Error Message</label>
        <locationX>1527</locationX>
        <locationY>156</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Marketosyncistheowner</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(166, 0, 0); font-size: 16px; background-color: rgb(255, 255, 255);&quot;&gt;This Hot List is owned by Marketo Sync. Please change the owner of the Hot List to a user before converting / upselling this Hot List.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>NOT_SAL_Message</name>
        <label>NOT SAL Message</label>
        <locationX>1692</locationX>
        <locationY>310</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>NOTSAL</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 16px; color: rgb(166, 0, 0);&quot;&gt;This Hot List must be in the Sales Accepted Stage before Converting/Upselling.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Owner_Is_Queue_Error_Screen</name>
        <label>Owner Is Queue Error Screen</label>
        <locationX>1538</locationX>
        <locationY>258</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>OwnerIsQueueErrorMessage</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 16px; color: rgb(166, 0, 0);&quot;&gt;This Lead/Hot List is owned by a Queue. Please change the owner of the Lead/Hot List to a user before converting/upselling this Hot List.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SerialAccountVerification</name>
        <label>SerialAccountVerification</label>
        <locationX>468</locationX>
        <locationY>636</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>SerialAccountNotMatchwithHotlistAccount</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(166, 0, 0); font-size: 16px;&quot;&gt;The Serial you have selected is associated with a different Account than the Account on the Hot List. Please select the correct serial.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Show_Contract_Information</name>
        <label>Show Contract Information</label>
        <locationX>324</locationX>
        <locationY>1146</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Proceed_With_an_Upsell</targetReference>
        </connector>
        <fields>
            <name>Do_you_want_to_proceed_with_an_Upsell</name>
            <choiceReferences>Radiobutton_Choice_Yes_Proceed_With_Upsell</choiceReferences>
            <choiceReferences>Radiobutton_Choice_No_dont_Proceed_with_Upsell</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Do you want to proceed with an Upsell?</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Upsell_Serial_Number</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Serial Number: {!Get_Current_Hot_List.Existing_Serial__r.Serial_Number__c}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Contract Number: {!Single_Contract_Number}&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>SubscriptionTable</name>
            <extensionName>c:FieldsetRelatedList</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldset</name>
                <value>
                    <stringValue>SubMgmt_SubscriptionList</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>relatedField</name>
                <value>
                    <stringValue>SBQQ__Subscription__c.SBQQ__Contract__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>explicitRecordId</name>
                <value>
                    <elementReference>Fetch_Contracts_For_Serial.contractId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>icon</name>
                <value>
                    <stringValue>standard:custom</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>headerName</name>
                <value>
                    <stringValue>Subscriptions</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>displayFormat</name>
                <value>
                    <stringValue>table</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Verify_Contract_Is_Correct</name>
        <label>Verify Contract Is Correct</label>
        <locationX>1502</locationX>
        <locationY>628</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>UserConfirmation</targetReference>
        </connector>
        <fields>
            <name>User_Confirmation_of_the_Contract</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 16px; background-color: rgb(255, 255, 255);&quot;&gt;Contract Number Selected for this Upsell/Amendment: &lt;/span&gt;&lt;strong style=&quot;color: rgb(0, 0, 0); font-size: 16px; background-color: rgb(255, 255, 255);&quot;&gt;{!Get_Current_Hot_List.Existing_Contract__r.ContractNumber}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Please_verify_the_Contract_number_for_this_Upsell_is_correct</name>
            <choiceReferences>MSP_SONIAN_Radio_button_Choice_Yes</choiceReferences>
            <choiceReferences>MSP_SONIAN_Radio_button_Choice_No</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Please verify the Contract number for this Upsell is correct.</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Verify_Serial_Is_Correct</name>
        <label>Verify Serial Is Correct</label>
        <locationX>843</locationX>
        <locationY>609</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>User_Confirmation</targetReference>
        </connector>
        <fields>
            <name>User_Confirmation_of_the_Serial</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 16px; background-color: rgb(255, 255, 255);&quot;&gt;Serial Number Selected for this Upsell: SN&lt;/span&gt;&lt;b style=&quot;color: rgb(0, 0, 0); font-size: 16px; background-color: rgb(255, 255, 255); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Oxygen, Ubuntu, &amp;quot;Fira Sans&amp;quot;, &amp;quot;Droid Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, sans-serif;&quot;&gt; &lt;/b&gt;&lt;b style=&quot;color: rgb(0, 0, 0); font-size: 16px;&quot;&gt;{!Get_Current_Hot_List.Existing_Serial__r.Serial_Number__c} &lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Please_verify_the_serial_number_for_this_Upsell_is_correct</name>
            <choiceReferences>Radio_button_Choice_Yes</choiceReferences>
            <choiceReferences>Radio_button_Choice_No</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Please verify the serial number for this Upsell is correct.</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>1095</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Get_Current_Hot_List</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>Contract_Number_Rows</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;{!Contract_Numbers_from_Loop}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>Contract</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contract</objectType>
    </variables>
    <variables>
        <name>Contract_Id</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Contains comma separated contract numbers</description>
        <name>contract_Number_Text</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Contract_Numbers_from_Loop</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>contractFetchMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>contractFetchResult</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Id of the Hot List that initiated this flow.</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Single_Contract_Number</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Text_End_Flow</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
