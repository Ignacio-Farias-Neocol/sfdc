<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>AssignTaskFields</name>
        <label>AssignTaskFields</label>
        <locationX>336</locationX>
        <locationY>1223</locationY>
        <assignmentItems>
            <assignToReference>$Record.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SupportTask</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Case_Account_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CaseAccountName</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Case_Account_Region__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CaseAccountRegion</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Case_Number__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetCase.CaseNumber</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Case_Primary_Product_Family__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PrimaryProductFamily</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Contact_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CaseContact</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Contact_Phone_number__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ContactPhone</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Product_Family__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ProductFamily</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Serial_Number__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SerialNumber</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Outbound_Inbound</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Inbound_Assignment</name>
        <label>Inbound Assignment</label>
        <locationX>336</locationX>
        <locationY>1463</locationY>
        <assignmentItems>
            <assignToReference>$Record.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inbound Phone Call</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.TaskSubtype</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Call</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Outbound_Assignment</name>
        <label>Outbound Assignment</label>
        <locationX>72</locationX>
        <locationY>1463</locationY>
        <assignmentItems>
            <assignToReference>$Record.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Outbound Phone Call</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.TaskSubtype</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Call</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Support_Task_Assignment_0</name>
        <label>Support Task Assignment</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>$Record.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Type</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetCase</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Outbound_Inbound</name>
        <label>Outbound/Inbound</label>
        <locationX>336</locationX>
        <locationY>1343</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Outbound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.CallType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Outbound</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Outbound_Assignment</targetReference>
            </connector>
            <label>Outbound</label>
        </rules>
        <rules>
            <name>Inbound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.CallType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Inbound</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Inbound_Assignment</targetReference>
            </connector>
            <label>Inbound</label>
        </rules>
    </decisions>
    <decisions>
        <name>Support_Task_Support_OutReach</name>
        <label>Support Task and Support OutReach</label>
        <locationX>622</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Support_Task_Support_Out_Reach</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WhatId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Support_Task</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Support Outreach</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Records_with_CaseId</targetReference>
            </connector>
            <label>Support Task and Support OutReach</label>
        </rules>
    </decisions>
    <decisions>
        <name>Task_Decision_Check</name>
        <label>Task Decision Check</label>
        <locationX>336</locationX>
        <locationY>311</locationY>
        <defaultConnector>
            <targetReference>Support_Task_Support_OutReach</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_Outreach_Support_Task</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WhatId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Support Outreach</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>SupportTask</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Support_Task_Assignment_0</targetReference>
            </connector>
            <label>Not Outreach Support Task</label>
        </rules>
        <rules>
            <name>Not_Outreach_Without_Support_Task</name>
            <conditionLogic>1 AND 2 AND ((3 AND 5) OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Support Outreach</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.WhatId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>SupportTask</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>CSMTask</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCase</targetReference>
            </connector>
            <label>Not Outreach Without Support Task</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CaseAccountName</name>
        <dataType>String</dataType>
        <expression>IF({!GetCase.AccountId}!= null,{!GetCase.Account.Name}, &quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>CaseAccountRegion</name>
        <dataType>String</dataType>
        <expression>IF({!GetCase.AccountId} != null &amp;&amp; {!GetCase.Account.Terr_Theater__c} != null, {!GetCase.Account.Terr_Theater__c}, &quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>CaseContact</name>
        <dataType>String</dataType>
        <expression>IF({!GetCase.ContactId} != null , {!GetCase.Contact.FirstName} + &quot;  &quot; + {!GetCase.Contact.LastName}, &quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>ContactPhone</name>
        <dataType>String</dataType>
        <expression>IF({!GetCase.Contact.Phone}!= null , {!GetCase.Contact.Phone}, &quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>CSMTask</name>
        <dataType>String</dataType>
        <expression>{!$Label.CSM_Task_Record_Type}</expression>
    </formulas>
    <formulas>
        <name>PrimaryProductFamily</name>
        <dataType>String</dataType>
        <expression>IF(TEXT({!GetCase.Product_Family_List__c}) != null, TEXT({!GetCase.Product_Family_List__c}),&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>ProductFamily</name>
        <dataType>String</dataType>
        <expression>IF({!GetCase.Product_Family__c}!= null, {!GetCase.Product_Family__c},&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>SerialNumber</name>
        <dataType>String</dataType>
        <expression>IF({!GetCase.Serial__c} != null , {!GetCase.Serial__r.Serial_Number__c}, &quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>SupportTask</name>
        <dataType>String</dataType>
        <expression>{!$Label.Support_Task}</expression>
    </formulas>
    <interviewLabel>Task Record Type {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Task Before Insert</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Case_Records_with_CaseId</name>
        <label>Get Case Records with CaseId</label>
        <locationX>490</locationX>
        <locationY>551</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_CTC_on_Task</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCase</name>
        <label>GetCase</label>
        <locationX>336</locationX>
        <locationY>1103</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignTaskFields</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_CTC_on_Task</name>
        <label>Update CTC on Task</label>
        <locationX>490</locationX>
        <locationY>671</locationY>
        <inputAssignments>
            <field>Customer_Touch_Category__c</field>
            <value>
                <elementReference>Get_Case_Records_with_CaseId.Serial__r.Account__r.Customer_Touch_Category__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Task_Decision_Check</targetReference>
        </connector>
        <filterLogic>(1 AND 2 AND 3) OR 4 OR ( 5 AND 6 AND 7 )</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>StartsWith</operator>
            <value>
                <stringValue>500</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Support Outreach</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>0125x000000cdt5AAA</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>0125x000000gnUUAAY</stringValue>
            </value>
        </filters>
        <filters>
            <field>WhatId</field>
            <operator>StartsWith</operator>
            <value>
                <stringValue>500</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Support Outreach</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>00T3I000008dEmhUAE</stringValue>
            </value>
        </filters>
        <object>Task</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
