<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Fetches serials for a given SMB username</description>
        <name>Action_SMB_Serial_API_Call</name>
        <label>Action: SMB Serial API Call</label>
        <locationX>433</locationX>
        <locationY>779</locationY>
        <actionName>SerialFetchAPI</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Decision_Fetch_Result</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>countryCode</name>
            <value>
                <elementReference>sourceAccount.BillingCountryCode</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>moveType</name>
            <value>
                <elementReference>Radiobutton_Group_Move_Type</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>smbusername</name>
            <value>
                <elementReference>smb_username</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SerialFetchAPI</nameSegment>
        <outputParameters>
            <assignToReference>serialFetchMessage</assignToReference>
            <name>message</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>serialFetchResult</assignToReference>
            <name>result</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>serialFetchAssignedSerials</assignToReference>
            <name>smbSerials</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Update Salesforce and Call API</description>
        <name>Move_Serials</name>
        <label>Move Serials</label>
        <locationX>1668</locationX>
        <locationY>768</locationY>
        <actionName>SerialMoveAPI</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Check_API_Result</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>countryCode</name>
            <value>
                <elementReference>sourceAccount.BillingCountryCode</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>moveType</name>
            <value>
                <elementReference>Radiobutton_Group_Move_Type</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serialSubMap</name>
            <value>
                <elementReference>serialMoveJSON</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>smbUsername</name>
            <value>
                <elementReference>smb_username</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sourceAccountUsername</name>
            <value>
                <elementReference>sourceAccount.User_na__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetPartnerUsername</name>
            <value>
                <elementReference>targetPartner.User_na__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SerialMoveAPI</nameSegment>
        <outputParameters>
            <assignToReference>serialMoveFailedSerials</assignToReference>
            <name>failedSerials</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>serialMoveMessage</assignToReference>
            <name>message</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>serialMoveResult</assignToReference>
            <name>result</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Get Subscriptions for the target partner account</description>
        <name>Subscription_Fetch</name>
        <label>Fetch Subscription</label>
        <locationX>1080</locationX>
        <locationY>327</locationY>
        <actionName>SubscriptionFetchAPI</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Update_Prior_Target_Partner_ID_Value</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>targetPartner.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>moveType</name>
            <value>
                <elementReference>Radiobutton_Group_Move_Type</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>productCodeList</name>
            <value>
                <elementReference>collectionProductCode</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SubscriptionFetchAPI</nameSegment>
        <outputParameters>
            <assignToReference>subscriptionFetchMessage</assignToReference>
            <name>message</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>subscriptionFetchResult</assignToReference>
            <name>result</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>targetSubscriptionList</assignToReference>
            <name>subscriptionList</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Update_Salesforce</name>
        <label>Update Salesforce</label>
        <locationX>1755</locationX>
        <locationY>1209</locationY>
        <actionName>SerialMoveHelperAction</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Final_Screen</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>serialSubMap</name>
            <value>
                <elementReference>serialMoveJSON</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SerialMoveHelperAction</nameSegment>
        <outputParameters>
            <assignToReference>sfUpdateSerialMoveMessage</assignToReference>
            <name>message</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>sfUpdateSerialMoveResult</assignToReference>
            <name>result</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>Add_Product_Code</name>
        <label>Add Product Code</label>
        <locationX>859</locationX>
        <locationY>610</locationY>
        <assignmentItems>
            <assignToReference>collectionProductCode</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loopAssignedSerial.Subscription__r.Product_Code__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Prepare_Product_Code_List</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>For Uplevel target partner is same as the source account</description>
        <name>Assign_Target_Partner</name>
        <label>Assign Target Partner</label>
        <locationX>922</locationX>
        <locationY>62</locationY>
        <assignmentItems>
            <assignToReference>targetPartner</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sourceAccount</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Subscription_Fetch_Check</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Dummy_assignment_for_exit</name>
        <label>Dummy assignment for exit</label>
        <locationX>1904</locationX>
        <locationY>317</locationY>
        <assignmentItems>
            <assignToReference>exitVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Exit</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Update the previous value of SMB Username. This helps us prevent frequent API calls if SMB username has not changed.</description>
        <name>Update_Prior_SMB_Value</name>
        <label>Update Prior SMB Value</label>
        <locationX>433</locationX>
        <locationY>546</locationY>
        <assignmentItems>
            <assignToReference>previousValue_smbUsername</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>smb_username</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Action_SMB_Serial_API_Call</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Update the previous value of Target Partner Id. This helps us prevent frequent Apex calls if target partner has not changed.</description>
        <name>Update_Prior_Target_Partner_ID_Value</name>
        <label>Update Prior Target Partner ID Value</label>
        <locationX>1223</locationX>
        <locationY>327</locationY>
        <assignmentItems>
            <assignToReference>previousValue_targetPartnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>targetPartner.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Subscription_Check</targetReference>
        </connector>
    </assignments>
    <choices>
        <description>Identifies the move as Migration (Default Value)</description>
        <name>Radiobutton_Choice_Migration</name>
        <choiceText>Migration</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Migration</stringValue>
        </value>
    </choices>
    <choices>
        <description>Do not proceed with the move.</description>
        <name>Radiobutton_Choice_No_Move</name>
        <choiceText>No, exit this process.</choiceText>
        <dataType>Boolean</dataType>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </choices>
    <choices>
        <description>Identifies the move as uplevel</description>
        <name>Radiobutton_Choice_Uplevel</name>
        <choiceText>Service change</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Uplevel</stringValue>
        </value>
    </choices>
    <choices>
        <description>Proceed with the move</description>
        <name>Radiobutton_Choice_Yes_Move</name>
        <choiceText>Yes, submit the request to move serials.</choiceText>
        <dataType>Boolean</dataType>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </choices>
    <constants>
        <name>CONSTANT_MSP</name>
        <dataType>String</dataType>
        <value>
            <stringValue>MSP</stringValue>
        </value>
    </constants>
    <decisions>
        <description>Process only applicable for MSP Accounts</description>
        <name>Business_Group_Check</name>
        <label>Business Group Check</label>
        <locationX>257</locationX>
        <locationY>375</locationY>
        <defaultConnector>
            <targetReference>Screen_Non_MSP_Account</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Non MSP Account</defaultConnectorLabel>
        <rules>
            <name>MSP_Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>sourceAccount.BusinessGroup__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>CONSTANT_MSP</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Screen_Enter_SMB_Username</targetReference>
            </connector>
            <label>MSP Account</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_API_Result</name>
        <label>Check API Result</label>
        <locationX>1660</locationX>
        <locationY>974</locationY>
        <defaultConnector>
            <targetReference>Update_Salesforce</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Success</defaultConnectorLabel>
        <rules>
            <name>Fail</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>serialMoveResult</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Final_Screen</targetReference>
            </connector>
            <label>Fail</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if Salesforce was successfully updated. If yes, then make the API call</description>
        <name>Check_Salesforce_Update</name>
        <label>Check Salesforce Update</label>
        <locationX>1665</locationX>
        <locationY>377</locationY>
        <defaultConnector>
            <targetReference>Final_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Show Error Screen</defaultConnectorLabel>
        <rules>
            <name>Call_Move_API</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>salesforceUpdateResult</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Move_Serials</targetReference>
            </connector>
            <label>Call Move API</label>
        </rules>
        <rules>
            <name>Exit_Process</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>exitProcess</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Dummy_assignment_for_exit</targetReference>
            </connector>
            <label>Exit Process</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if Account Search Screen should be shown or not</description>
        <name>Decision_Account_Search</name>
        <label>Account Search</label>
        <locationX>747</locationX>
        <locationY>66</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Show_Account_Search</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Radiobutton_Group_Move_Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Radiobutton_Choice_Migration</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Screen_Account_Search</targetReference>
            </connector>
            <label>Show Account Search</label>
        </rules>
        <rules>
            <name>Do_Not_Show_Account_Search</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Radiobutton_Group_Move_Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Radiobutton_Choice_Uplevel</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Target_Partner</targetReference>
            </connector>
            <label>Do Not Show Account Search</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if API call should be made or not</description>
        <name>Decision_API_Call_Check</name>
        <label>API Call Check</label>
        <locationX>434</locationX>
        <locationY>240</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Call_API</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>smb_username</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>smb_username</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>smb_username</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>previousValue_smbUsername</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Prior_SMB_Value</targetReference>
            </connector>
            <label>Call API</label>
        </rules>
        <rules>
            <name>Do_Not_Call_API</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>previousValue_smbUsername</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>previousValue_smbUsername</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>previousValue_smbUsername</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>smb_username</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Decision_Account_Search</targetReference>
            </connector>
            <label>Do Not Call API</label>
        </rules>
        <rules>
            <name>SMB_Username_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>smb_username</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>smb_username</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Screen_Username_is_blank</targetReference>
            </connector>
            <label>SMB Username Blank</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if the API returned values for the SMB username</description>
        <name>Decision_Fetch_Result</name>
        <label>Fetch Result</label>
        <locationX>692</locationX>
        <locationY>782</locationY>
        <defaultConnector>
            <targetReference>Screen_Fetch_Error</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Fetch Failed</defaultConnectorLabel>
        <rules>
            <name>Fetch_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>serialFetchResult</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Prepare_Product_Code_List</targetReference>
            </connector>
            <label>Fetch Success</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if the collection contains product code</description>
        <name>Product_Code_Check</name>
        <label>Product Code Check</label>
        <locationX>1030</locationX>
        <locationY>513</locationY>
        <defaultConnector>
            <targetReference>Add_Product_Code</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Does Not Contain Product Code</defaultConnectorLabel>
        <rules>
            <name>Contains_Product_Code</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>collectionProductCode</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>loopAssignedSerial.Subscription__r.Product_Code__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Prepare_Product_Code_List</targetReference>
            </connector>
            <label>Contains Product Code</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if Subscription fetch was successful or not</description>
        <name>Subscription_Check</name>
        <label>Subscription Check</label>
        <locationX>1369</locationX>
        <locationY>86</locationY>
        <defaultConnector>
            <targetReference>Screen_Sub_Fetch_Error</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Subscription Fetch Failed</defaultConnectorLabel>
        <rules>
            <name>Subscription_Fetch_Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>subscriptionFetchResult</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Screen_Serial_Move</targetReference>
            </connector>
            <label>Subscription Fetch Success</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if Subscription needs to be fetched. This should be done the first time or when the target partner changes</description>
        <name>Subscription_Fetch_Check</name>
        <label>Subscription Fetch Check</label>
        <locationX>1072</locationX>
        <locationY>63</locationY>
        <defaultConnector>
            <targetReference>Subscription_Check</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Do not fetch Subscriptions</defaultConnectorLabel>
        <rules>
            <name>Fetch_Subscription</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>targetPartner.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>previousValue_targetPartnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Subscription_Fetch</targetReference>
            </connector>
            <label>Fetch Subscription</label>
        </rules>
    </decisions>
    <description>Flow to go through the Serial Move process</description>
    <environments>Default</environments>
    <interviewLabel>Serial Move {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Serial Move</label>
    <loops>
        <description>Prepare Product Code List to fetch Susbcriptions</description>
        <name>Prepare_Product_Code_List</name>
        <label>Prepare Product Code List</label>
        <locationX>698</locationX>
        <locationY>504</locationY>
        <assignNextValueToReference>loopAssignedSerial</assignNextValueToReference>
        <collectionReference>serialFetchAssignedSerials</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Product_Code_Check</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Decision_Account_Search</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Gets details of the partner account used for uplevel</description>
        <name>Get_Uplevel_Account_Details</name>
        <label>Get Uplevel Account Details</label>
        <locationX>174</locationX>
        <locationY>206</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Business_Group_Check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <object>Account</object>
        <outputReference>sourceAccount</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>User_na__c</queriedFields>
        <queriedFields>BusinessGroup__c</queriedFields>
        <queriedFields>BillingCountryCode</queriedFields>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <description>Final Screen of the flow</description>
        <name>Final_Screen</name>
        <label>Final Screen</label>
        <locationX>1935</locationX>
        <locationY>814</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Move_Success_Message</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(2, 126, 70);&quot;&gt;Serials moved successfully.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>serialMoveResult</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Move_Failed_Message</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(194, 57, 52);&quot;&gt;Error completing the request. {!serialMoveMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>serialMoveResult</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Salesforce_Update_Failed</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(194, 57, 52);&quot;&gt;Error updating Assigned Serials in Salesforce. {!sfUpdateSerialMoveMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>sfUpdateSerialMoveResult</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Failed_Serials_Table</name>
            <extensionName>c:failedSerialsTable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>failedSerialsString</name>
                <value>
                    <elementReference>serialMoveFailedSerials</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>serialMoveFailedSerials</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Screen_Account_Search</name>
        <label>Account Search</label>
        <locationX>906</locationX>
        <locationY>381</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Subscription_Fetch_Check</targetReference>
        </connector>
        <fields>
            <name>Display_Account_Search_Message</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Search and select a target partner account.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Account_Search_Dialog</name>
            <extensionName>c:accountSearch</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>targetPartner</assignToReference>
                <name>targetPartnerAccount</name>
            </outputParameters>
        </fields>
        <helpText>&lt;p&gt;Select Account to determine target subscriptions&lt;/p&gt;</helpText>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Select the move type and enter smb username</description>
        <name>Screen_Enter_SMB_Username</name>
        <label>Enter SMB Username</label>
        <locationX>390</locationX>
        <locationY>58</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Decision_API_Call_Check</targetReference>
        </connector>
        <fields>
            <name>Radiobutton_Group_Move_Type</name>
            <choiceReferences>Radiobutton_Choice_Migration</choiceReferences>
            <choiceReferences>Radiobutton_Choice_Uplevel</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>Radiobutton_Choice_Migration</defaultSelectedChoiceReference>
            <fieldText>Select Serial Move Type</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>smb_username</name>
            <dataType>String</dataType>
            <fieldText>SMB Username</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays error messages related to fetching Serials</description>
        <name>Screen_Fetch_Error</name>
        <label>Fetch Error</label>
        <locationX>902</locationX>
        <locationY>778</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Serial_Fetch_Error_Message</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(194, 57, 52);&quot;&gt;Error fetching serials: {!serialFetchMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Screen showing error message that this process is not applicable for non MSP Accounts</description>
        <name>Screen_Non_MSP_Account</name>
        <label>Non MSP Account</label>
        <locationX>268</locationX>
        <locationY>547</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Empty_Username_Error_Message_0</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(194, 57, 52);&quot;&gt;This process is applicable only to MSP accounts.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays the Serials to be moved and target subscriptions</description>
        <name>Screen_Serial_Move</name>
        <label>Serial Move</label>
        <locationX>1634</locationX>
        <locationY>86</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Check_Salesforce_Update</targetReference>
        </connector>
        <fields>
            <name>Serial_Move_Dialog</name>
            <extensionName>c:serialMoveDialog</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>serialList</name>
                <value>
                    <elementReference>serialFetchAssignedSerials</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>subscriptionList</name>
                <value>
                    <elementReference>targetSubscriptionList</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>smbUsername</name>
                <value>
                    <elementReference>smb_username</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>partnerUsername</name>
                <value>
                    <elementReference>targetPartner.User_na__c</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>moveType</name>
                <value>
                    <elementReference>Radiobutton_Group_Move_Type</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>serialMoveJSON</assignToReference>
                <name>serialMoveJSON</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>salesforceUpdateResult</assignToReference>
                <name>sfUpdateResult</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>salesforceUpdateMessage</assignToReference>
                <name>sfUpdateMessage</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>exitProcess</assignToReference>
                <name>sfExitProcess</name>
            </outputParameters>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays error messages related to fetching Subscriptions</description>
        <name>Screen_Sub_Fetch_Error</name>
        <label>Sub Fetch Error</label>
        <locationX>1376</locationX>
        <locationY>473</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Sub_Fetch_Error_Message</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(194, 57, 52);&quot;&gt;Error fetching subscriptions: {!subscriptionFetchMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This screen should never be shown since blank username should be caught in the first screen.</description>
        <name>Screen_Username_is_blank</name>
        <label>Username is blank</label>
        <locationX>565</locationX>
        <locationY>436</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Empty_Username_Error_Message</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(194, 57, 52);&quot;&gt;SMB Username cannot be blank.&lt;span class=&quot;ql-cursor&quot;&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>TST_SCREEN</name>
        <label>TST SCREEN</label>
        <locationX>1504</locationX>
        <locationY>272</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>FINAL_JSON</name>
            <fieldText>&lt;p&gt;{!serialMoveJSON}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Get_Uplevel_Account_Details</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Collection of Product Codes present in source serials</description>
        <name>collectionProductCode</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>exitProcess</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Dummy variable to exit process</description>
        <name>exitVariable</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Account Id of the searched Account</description>
        <name>lookupAccountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Name of the Account searched by the user</description>
        <name>lookupAccountName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Assigned Serial in the loop</description>
        <name>loopAssignedSerial</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Assigned_Serial__c</objectType>
    </variables>
    <variables>
        <description>Holds the prior value of SMB username. This is used to determine if we need to make an API call or not.</description>
        <name>previousValue_smbUsername</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the previous value of target partner. This is used to prevent multiple calls to get subscription</description>
        <name>previousValue_targetPartnerId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Partner Account Record Id which initiated this process</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Message returned when Salesforce was updated</description>
        <name>salesforceUpdateMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Result retuned when attempting to update Assigned Serials in Salesforce</description>
        <name>salesforceUpdateResult</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>List returned by the API</description>
        <name>serialFetchAssignedSerials</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Assigned_Serial__c</objectType>
    </variables>
    <variables>
        <description>Message returned by the API call to fetch serials</description>
        <name>serialFetchMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Determines if the serial fetch was successful or not</description>
        <name>serialFetchResult</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Failed serials returned by API</description>
        <name>serialMoveFailedSerials</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>JSON string representing the move information to be passed to API</description>
        <name>serialMoveJSON</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Holds the message returned by SerialMoveAPI</description>
        <name>serialMoveMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Holds the result of Serial Move API</description>
        <name>serialMoveResult</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>sfUpdateSerialMoveMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>sfUpdateSerialMoveResult</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Source account of the Serial to be moved/upleveled</description>
        <name>sourceAccount</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <description>Message returned by Subscription Fetch Action</description>
        <name>subscriptionFetchMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Result of subscription fetch</description>
        <name>subscriptionFetchResult</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>targetPartner</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <description>List of subscriptions for the Account selected by the user</description>
        <name>targetSubscriptionList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>SBQQ__Subscription__c</objectType>
    </variables>
</Flow>
